name: build
on:
  push: []
  schedule:
  - cron: 59 14 * * *
  pull_request: []

jobs:
  test:
    strategy:
      matrix:
        os:
        - ubuntu-22.04
        - macos-11
        - windows-2022
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1
      with:
        enable-stack: true
    - name: Cache Stack files (non-Windows)
      if: "runner.os != 'Windows'"
      uses: actions/cache@v2
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          ~/.stack
        key: stack-${{ runner.os }}-${{ runner.arch }}
    - name: Cache Stack files (Windows)
      if: "runner.os == 'Windows'"
      uses: actions/cache@v2
      with:
        path: |
          %APPDATA%\cabal\packages
          %APPDATA%\cabal\store
          %APPDATA%\stack
        key: stack-${{ runner.os }}-${{ runner.arch }}
    - name: Resolve dependencies
      run: stack install --test --only-dependencies
    - name: Build
      run: stack build --test
    - name: Test
      run: stack test
    - name: Build for release (Windows)
      if: runner.os == 'Windows'
      run: stack build --flag submark:static --copy-bins
    - name: Build for release (macOS)
      if: runner.os == 'macOS'
      run: stack build --copy-bins
    - id: bin-path
      if: runner.os != 'Linux'
      shell: bash
      run: |
        echo "bin-path=$(stack path --local-bin)/submark" >> "$GITHUB_OUTPUT"
    - uses: crazy-max/ghaction-upx@v1
      if: runner.os == 'Windows'
      with:
        files: ${{ steps.bin-path.outputs.bin-path }}.exe
        args: "-9"
    - if: runner.os != 'Linux'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ runner.os }}-executable
        path: ${{ steps.bin-path.outputs.bin-path }}*
        if-no-files-found: error
    - if: runner.os != 'Windows'
      run: 'grep "Version $(stack query locals submark version)" CHANGELOG.md'
    - if: github.ref_type == 'tag' && runner.os != 'Windows'
      run: '[[ "$(stack query locals submark version)" = "$GITHUB_REF_NAME" ]]'

  check:
    if: github.event_name == 'pull_request'
    env:
      CHECKMATE_DOWNLOAD_URL: https://github.com/dahlia/checkmate/releases/download/0.4.0/checkmate-linux-x86_64
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - run: |
        set -evx
        mkdir -p ~/bin
        curl -L -o ~/bin/checkmate "$CHECKMATE_DOWNLOAD_URL"
        chmod +x ~/bin/checkmate
        ~/bin/checkmate github \
          --token "${{ secrets.GITHUB_TOKEN }}" \
          --login "$GITHUB_REPOSITORY_OWNER" \
          --repo "${GITHUB_REPOSITORY#*/}" \
          --pr "$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")"

  docker-image:
    env:
      IMG_REPO: ghcr.io/${{ github.repository }}
      IMG_TAG: git-${{ github.sha }}
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true
    - run: |
        set -exv
        if [[ "$GITHUB_REF_TYPE" = "tag" ]]; then
          tag_label="--label org.opencontainers.image.version=$GITHUB_REF_NAME"
        fi
        docker build \
          --tag "$IMG_REPO:$IMG_TAG" \
          --label \
            org.opencontainers.image.url=https://github.com/$GITHUB_REPOSITORY \
          $tag_label \
          .
        docker login ghcr.io \
          --username "$GITHUB_REPOSITORY_OWNER" \
          --password-stdin <<< "${{ secrets.GITHUB_TOKEN }}"
        docker push "$IMG_REPO:$IMG_TAG"
    - if: github.ref_type == 'tag'
      run: |
        set -exv
        docker tag "$IMG_REPO:$IMG_TAG" "$IMG_REPO:$GITHUB_REF_NAME"
        docker push "$IMG_REPO:$GITHUB_REF_NAME"
        docker tag "$IMG_REPO:$IMG_TAG" "$IMG_REPO:latest"
        docker push "$IMG_REPO:latest"
    - run: |
        docker run "$IMG_REPO:$IMG_TAG" cat /usr/bin/submark \
          > "$RUNNER_TEMP/submark"
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ runner.os }}-musl-executable
        path: ${{ runner.temp }}/submark
        if-no-files-found: error

  release:
    needs: [test, docker-image]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1
      with:
        enable-stack: true
    - run: |
        set -evx
        mkdir -p "$RUNNER_TEMP/dist/"
        stack sdist
        cp "$(stack path --dist-dir)"/submark-*.tar.gz "$RUNNER_TEMP/dist/"
    - run:
        set -evx
        mkdir -p "$RUNNER_TEMP/linux/"
        mkdir -p "$RUNNER_TEMP/macos/"
        mkdir -p "$RUNNER_TEMP/windows/"
    - uses: actions/download-artifact@v3
      with:
        name: Linux-musl-executable
        path: ${{ runner.temp }}/linux
    - uses: actions/download-artifact@v3
      with:
        name: macOS-executable
        path: ${{ runner.temp }}/macos
    - uses: actions/download-artifact@v3
      with:
        name: Windows-executable
        path: ${{ runner.temp }}/windows
    - run: |
        set -evx
        mv "$RUNNER_TEMP/linux/submark" "$RUNNER_TEMP/dist/submark-linux-x86_64"
        mv "$RUNNER_TEMP/macos/submark" \
          "$RUNNER_TEMP/dist/submark-darwin-x86_64"
        mv "$RUNNER_TEMP/windows/submark.exe" \
          "$RUNNER_TEMP/dist/submark-win64.exe"
    - run: |
        set -evx
        chmod +x "$RUNNER_TEMP/dist/submark-linux-x86_64"
        "$RUNNER_TEMP/dist/submark-linux-x86_64" \
          --h2 "Version $(stack query locals submark version)" \
          --omit-heading \
          --out-file "$RUNNER_TEMP/dist/RELEASE.md" \
          CHANGELOG.md
    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: ${{ runner.temp }}/dist/
        if-no-files-found: error
    - if: github.ref_type == 'tag'
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        body_path: ${{ runner.temp }}/dist/RELEASE.md
        name: submark ${{ github.ref_name }}
        files: |
          ${{ runner.temp }}/dist/submark-linux-x86_64
          ${{ runner.temp }}/dist/submark-darwin-x86_64
          ${{ runner.temp }}/dist/submark-win64.exe
          ${{ runner.temp }}/dist/submark-${{ github.ref_name }}.tar.gz
    - if: github.ref_type == 'tag'
      run: stack upload --no-terminal --ignore-check .
      env:
        HACKAGE_USERNAME: ${{ secrets.HACKAGE_USERNAME }}
        HACKAGE_PASSWORD: ${{ secrets.HACKAGE_PASSWORD }}
