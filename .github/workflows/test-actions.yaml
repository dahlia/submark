name: test-actions
on:
  push: []
  schedule:
  - cron: 59 14 * * *
  pull_request: []

jobs:
  test-setup-submark:
    strategy:
      matrix:
        os:
        - ubuntu-20.04
        - ubuntu-22.04
        - ubuntu-24.04
        - macos-12  # Intel
        - macos-13  # Intel
        - macos-14-large  # Intel
        - windows-2019
        - windows-2022
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    # Test 1
    - id: setup1
      uses: ./setup
      with:
        submark-version: 0.3.*
        add-to-path: false
    - run: |
        set -e
        [[ "${{ steps.setup1.outputs.submark-version }}" = 0.3.* ]]
        [[ "${{ steps.setup1.outputs.submark-version }}" != "0.3.*" ]]
        ! command -v submark
      shell: bash
    - run: >-
        ${{ steps.setup1.outputs.submark-path }}
        --h2 "software license"
        -i README.md
    # Test 2
    - id: setup2
      uses: ./setup
      with:
        submark-version: 0.3.0
    - run: |
        set -e
        [[ "${{ steps.setup2.outputs.submark-version }}" = "0.3.0" ]]
        command -v submark
      shell: bash
    - run: 'submark --h2 "software license" -i README.md'
    - run: >-
        ${{ steps.setup2.outputs.submark-path }}
        --h2 "software license"
        -i README.md

  test-submark:
    strategy:
      matrix:
        os:
        - ubuntu-20.04
        - ubuntu-22.04
        - ubuntu-24.04
        - macos-12  # Intel
        - macos-13  # Intel
        - macos-14-large  # Intel
        - windows-2019
        - windows-2022
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    # Test 1
    - id: submark1
      uses: ./
      with:
        input-text: |
          # Foo
          h1-foo
          ## Bar
          h2-bar
          ## Baz
          h2-bar
          ### Bar
          h3-bar
        heading-level: 2
        heading-title-text: bar
        ignore-case: true
        omit-heading: true
    - run: |
        import os.path
        output_file = os.environ['OUTPUT_FILE']
        output_text = os.environ['OUTPUT_TEXT']
        assert os.path.isfile(output_file), 'no such file: ' + output_file
        assert open(output_file).read().strip() == output_text.strip()
        assert output_text.strip() == 'h2-bar'
      shell: python
      env:
        OUTPUT_FILE: ${{ steps.submark1.outputs.output-file }}
        OUTPUT_TEXT: ${{ steps.submark1.outputs.output-text }}
    # Test 2
    - id: submark2
      uses: ./
      with:
        input-file: CHANGELOG.md
        heading-level: 2
        heading-title-regex: '[Vv]er(sion)?[[:space:]]+0[.]1[.]0'
        omit-heading: true
    - run: |
        import os.path
        output_file = os.environ['OUTPUT_FILE']
        output_text = os.environ['OUTPUT_TEXT']
        assert os.path.isfile(output_file), 'no such file: ' + output_file
        assert open(output_file).read().strip() == output_text.strip()
        assert output_text.strip() == \
          'Initial release.  Released on September 24, 2017.'
      shell: python
      env:
        OUTPUT_FILE: ${{ steps.submark2.outputs.output-file }}
        OUTPUT_TEXT: ${{ steps.submark2.outputs.output-text }}
